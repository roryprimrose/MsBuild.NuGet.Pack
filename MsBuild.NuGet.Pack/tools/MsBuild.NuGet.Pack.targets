<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="MsBuild.NuGet.Pack.MergeNuSpecTask" AssemblyFile="MsBuild.NuGet.Pack.dll" />
  <UsingTask TaskName="MsBuild.NuGet.Pack.BuildNuSpecTask" AssemblyFile="MsBuild.NuGet.Pack.dll" />
  <UsingTask TaskName="MsBuild.NuGet.Pack.PublishPackageTask" AssemblyFile="MsBuild.NuGet.Pack.dll" />

  <!-- Hook into the BeforeClean activity -->
  <PropertyGroup>
    <CleanDependsOn>
      $(CleanDependsOn);
      CleanPackages
    </CleanDependsOn>
  </PropertyGroup>

  <!-- Hook into the AfterBuild activity -->
  <PropertyGroup>
    <BuildDependsOn>
      $(BuildDependsOn);
      BuildPackage;
      PublishPackage
    </BuildDependsOn>
  </PropertyGroup>

  <!--
  Configuration properties - you can override these from the command line
  -->
  <PropertyGroup>
    <MsBuildNuGetPackImported>true</MsBuildNuGetPackImported>

    <RunNuGetPack Condition="'$(RunNuGetPack)'=='' AND '$(Configuration)'=='Release'">true</RunNuGetPack>
    <RunNuGetPack Condition="'$(RunNuGetPack)'==''">false</RunNuGetPack>
    <IncludeBuildVersion Condition="'$(IncludeBuildVersion)'==''">false</IncludeBuildVersion>
    <UseBuildVersionAsPatch Condition="'$(UseBuildVersionAsPatch)'==''">false</UseBuildVersionAsPatch>
    <FileExclusionPattern Condition="'$(FileExclusionPattern)'==''">*.CodeAnalysisLog.xml;*.lastcodeanalysissucceeded;*Test*.*</FileExclusionPattern>
    <PackageExclusionPattern Condition="'$(PackageExclusionPattern)'==''">MsBuild.NuGet.Pack</PackageExclusionPattern>
    <PackageVersion></PackageVersion>
    <TargetSpecificFramework Condition="'$(TargetSpecificFramework)'==''">false</TargetSpecificFramework>

    <NuGetExePath Condition="'$(NuGetExePath)' == ''">$(MSBuildThisFileDirectory)\nuget.exe</NuGetExePath>
    <NuSpecFileName Condition="'$(NuSpecFileName)' == ''">$(MSBuildProjectName).nuspec</NuSpecFileName>
    <ProjectFile Condition="'$(ProjectFile)' == ''">$(MSBuildProjectFile)</ProjectFile>
    <ProjectDirectory Condition="'$(ProjectDirectory)' == ''">$(MSBuildProjectDirectory)</ProjectDirectory>
    <SourceNuSpecPath>$(ProjectDirectory)\$(NuSpecFileName)</SourceNuSpecPath>
    <TargetNuSpecPath>$(ProjectDirectory)\$(IntermediateOutputPath)\$(NuSpecFileName)</TargetNuSpecPath>
    <NugetPackageTargetDir Condition="'$(NugetPackageTargetDir)' == ''">$(TargetDir)</NugetPackageTargetDir>

    <RunNuGetPublish Condition="'$(RunNuGetPublish)'==''">false</RunNuGetPublish>
    <NuGetServer Condition="'$(NuGetServer)' == ''"></NuGetServer>
    <NuGetApiKey Condition="'$(NuGetApiKey)' == ''"></NuGetApiKey>

  </PropertyGroup>

  <Target Name="CleanPackages">

    <Message Text="Removing existing nupkg files from $(NugetPackageTargetDir)" />

    <ItemGroup>
      <PreviousPackages Include="$(NugetPackageTargetDir)\**\*.nupkg" />
    </ItemGroup>

    <Delete Files="@(PreviousPackages)" ContinueOnError="True" />

  </Target>

  <Target Name="BuildPackage" Condition="$(RunNuGetPack)">

    <Error Condition="!Exists($(NuGetExePath))" Text="The NuGet commandline was not found at '$(NuGetExePath)'" />

    <Delete Files="$(TargetNuSpecPath)" Condition="Exists($(TargetNuSpecPath))" ContinueOnError="True" />
    <Copy SourceFiles="$(SourceNuSpecPath)" DestinationFiles="$(TargetNuSpecPath)" OverwriteReadOnlyFiles="True" />

    <MergeNuSpecTask
      NuSpecPath="$(TargetNuSpecPath)"
      ProjectDirectory="$(ProjectDirectory)"
      ProjectFile="$(ProjectFile)"
      PrimaryOutputAssembly="$(TargetPath)"
      PackageVersion="$(PackageVersion)"
      IncludeBuildVersion="$(IncludeBuildVersion)"
      UseBuildVersionAsPatch="$(UseBuildVersionAsPatch)"
      FileExclusionPattern="$(FileExclusionPattern)"
      PackageExclusionPattern="$(PackageExclusionPattern)"
      TargetFrameworkVersion="$(TargetFrameworkVersion)"
      TargetFrameworkProfile="$(TargetFrameworkProfile)"
      TargetSpecificFramework="$(TargetSpecificFramework)"/>

    <BuildNuSpecTask
      NuGetPath="$(NuGetExePath)"
      NuSpecPath="$(TargetNuSpecPath)"
      ProjectDirectory="$(ProjectDirectory)"
      OutDir="$(NugetPackageTargetDir)" />

  </Target>

  <Target Name="PublishPackage" Condition="$(RunNuGetPublish)">

    <Error Condition="!Exists($(NuGetExePath))" Text="The NuGet commandline was not found at '$(NuGetExePath)'" />

    <PublishPackageTask
      NuGetPath="$(NuGetExePath)"
      NuSpecPath="$(NuSpecPath)"
      Server="$(NuGetServer)"
      ApiKey="$(NuGetApiKey)"
      OutDir="$(NugetPackageTargetDir)" />

  </Target>

</Project>
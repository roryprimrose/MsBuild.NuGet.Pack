<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConvertIfStatementToConditionalTernaryExpression/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConvertIfStatementToNullCoalescingExpression/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConvertNullableToShortForm/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ForCanBeConvertedToForeach/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=MemberCanBeMadeStatic_002ELocal/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=RedundantToStringCallForValueType/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestBaseTypeForParameter/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestUseVarKeywordEverywhere/@EntryIndexedValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestUseVarKeywordEvident/@EntryIndexedValue"></s:String>
	<s:Boolean x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=SuggestUseVarKeywordEvident/@EntryIndexRemoved">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=Default/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="Default"&gt;&lt;AspOptimizeRegisterDirectives&gt;True&lt;/AspOptimizeRegisterDirectives&gt;&lt;HtmlReformatCode&gt;True&lt;/HtmlReformatCode&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;CSRemoveCodeRedundancies&gt;True&lt;/CSRemoveCodeRedundancies&gt;&lt;CSUseAutoProperty&gt;True&lt;/CSUseAutoProperty&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;CAN_CHANGE_TO_IMPLICIT&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;ALWAYS_IMPLICIT&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;ALWAYS_IMPLICIT&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;VBOptimizeImports&gt;True&lt;/VBOptimizeImports&gt;&lt;VBReformatCode&gt;True&lt;/VBReformatCode&gt;&lt;JsInsertSemicolon&gt;True&lt;/JsInsertSemicolon&gt;&lt;JsReformatCode&gt;True&lt;/JsReformatCode&gt;&lt;CssAlphabetizeProperties&gt;True&lt;/CssAlphabetizeProperties&gt;&lt;CssReformatCode&gt;True&lt;/CssReformatCode&gt;&lt;XMLReformatCode&gt;True&lt;/XMLReformatCode&gt;&lt;StyleCop.Documentation&gt;&lt;SA1600ElementsMustBeDocumented&gt;True&lt;/SA1600ElementsMustBeDocumented&gt;&lt;SA1604ElementDocumentationMustHaveSummary&gt;True&lt;/SA1604ElementDocumentationMustHaveSummary&gt;&lt;SA1609PropertyDocumentationMustHaveValueDocumented&gt;True&lt;/SA1609PropertyDocumentationMustHaveValueDocumented&gt;&lt;SA1611ElementParametersMustBeDocumented&gt;True&lt;/SA1611ElementParametersMustBeDocumented&gt;&lt;SA1615ElementReturnValueMustBeDocumented&gt;True&lt;/SA1615ElementReturnValueMustBeDocumented&gt;&lt;SA1617VoidReturnValueMustNotBeDocumented&gt;True&lt;/SA1617VoidReturnValueMustNotBeDocumented&gt;&lt;SA1618GenericTypeParametersMustBeDocumented&gt;True&lt;/SA1618GenericTypeParametersMustBeDocumented&gt;&lt;SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes&gt;True&lt;/SA1626SingleLineCommentsMustNotUseDocumentationStyleSlashes&gt;&lt;SA1628DocumentationTextMustBeginWithACapitalLetter&gt;True&lt;/SA1628DocumentationTextMustBeginWithACapitalLetter&gt;&lt;SA1629DocumentationTextMustEndWithAPeriod&gt;True&lt;/SA1629DocumentationTextMustEndWithAPeriod&gt;&lt;SA1633SA1641UpdateFileHeader&gt;Ignore&lt;/SA1633SA1641UpdateFileHeader&gt;&lt;SA1639FileHeaderMustHaveSummary&gt;True&lt;/SA1639FileHeaderMustHaveSummary&gt;&lt;SA1642ConstructorSummaryDocumentationMustBeginWithStandardText&gt;True&lt;/SA1642ConstructorSummaryDocumentationMustBeginWithStandardText&gt;&lt;SA1643DestructorSummaryDocumentationMustBeginWithStandardText&gt;True&lt;/SA1643DestructorSummaryDocumentationMustBeginWithStandardText&gt;&lt;SA1644DocumentationHeadersMustNotContainBlankLines&gt;True&lt;/SA1644DocumentationHeadersMustNotContainBlankLines&gt;&lt;/StyleCop.Documentation&gt;&lt;StyleCop.Readability&gt;&lt;SA1100DoNotPrefixCallsWithBaseUnlessLocalImplementationExists&gt;True&lt;/SA1100DoNotPrefixCallsWithBaseUnlessLocalImplementationExists&gt;&lt;SA1106CodeMustNotContainEmptyStatements&gt;True&lt;/SA1106CodeMustNotContainEmptyStatements&gt;&lt;SA1108BlockStatementsMustNotContainEmbeddedComments&gt;True&lt;/SA1108BlockStatementsMustNotContainEmbeddedComments&gt;&lt;SA1109BlockStatementsMustNotContainEmbeddedRegions&gt;True&lt;/SA1109BlockStatementsMustNotContainEmbeddedRegions&gt;&lt;SA1120CommentsMustContainText&gt;True&lt;/SA1120CommentsMustContainText&gt;&lt;SA1121UseBuiltInTypeAlias&gt;True&lt;/SA1121UseBuiltInTypeAlias&gt;&lt;SA1122UseStringEmptyForEmptyStrings&gt;True&lt;/SA1122UseStringEmptyForEmptyStrings&gt;&lt;SA1123DoNotPlaceRegionsWithinElements&gt;True&lt;/SA1123DoNotPlaceRegionsWithinElements&gt;&lt;SA1124CodeMustNotContainEmptyRegions&gt;True&lt;/SA1124CodeMustNotContainEmptyRegions&gt;&lt;/StyleCop.Readability&gt;&lt;StyleCop.Layout&gt;&lt;SA1500CurlyBracketsForMultiLineStatementsMustNotShareLine&gt;True&lt;/SA1500CurlyBracketsForMultiLineStatementsMustNotShareLine&gt;&lt;SA1509OpeningCurlyBracketsMustNotBePrecededByBlankLine&gt;True&lt;/SA1509OpeningCurlyBracketsMustNotBePrecededByBlankLine&gt;&lt;SA1510ChainedStatementBlocksMustNotBePrecededByBlankLine&gt;True&lt;/SA1510ChainedStatementBlocksMustNotBePrecededByBlankLine&gt;&lt;SA1511WhileDoFooterMustNotBePrecededByBlankLine&gt;True&lt;/SA1511WhileDoFooterMustNotBePrecededByBlankLine&gt;&lt;SA1512SingleLineCommentsMustNotBeFollowedByBlankLine&gt;True&lt;/SA1512SingleLineCommentsMustNotBeFollowedByBlankLine&gt;&lt;SA1513ClosingCurlyBracketMustBeFollowedByBlankLine&gt;True&lt;/SA1513ClosingCurlyBracketMustBeFollowedByBlankLine&gt;&lt;SA1514ElementDocumentationHeaderMustBePrecededByBlankLine&gt;True&lt;/SA1514ElementDocumentationHeaderMustBePrecededByBlankLine&gt;&lt;SA1515SingleLineCommentMustBeProceededByBlankLine&gt;True&lt;/SA1515SingleLineCommentMustBeProceededByBlankLine&gt;&lt;/StyleCop.Layout&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;/Profile&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue">Default</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_ARRAY_AND_OBJECT_INITIALIZER/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue">NEXT_LINE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_ATTRIBUTE_STYLE/@EntryValue">SEPARATE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FIXED_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOR_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOREACH_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_IFELSE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_USING_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_WHILE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/INITIALIZER_BRACES/@EntryValue">NEXT_LINE</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_USER_LINEBREAKS/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_ABSTRACT_ACCESSORHOLDER_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_INITIALIZER_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_LINQ_ON_SINGLE_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_WHILE_ON_NEW_LINE/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SIMPLE_EMBEDDED_STATEMENT_STYLE/@EntryValue">LINE_BREAK</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AROUND_MULTIPLICATIVE_OP/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_TYPEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_SINGLE_LINE_ARRAY_INITIALIZER_BRACES/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DECLARATION_LPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_INVOCATION_LPAR/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_ARGUMENTS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_OBJECT_AND_COLLECTION_INITIALIZER_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_PARAMETERS_STYLE/@EntryValue">CHOP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&#xD;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
  &lt;TypePattern DisplayName="COM interfaces or structs"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;Or&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Interface" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;&#xD;
            &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
        &lt;Kind Is="Struct" /&gt;&#xD;
      &lt;/Or&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="NUnit Test Fixtures" RemoveRegions="All"&gt;&#xD;
    &lt;TypePattern.Match&gt;&#xD;
      &lt;And&gt;&#xD;
        &lt;Kind Is="Class" /&gt;&#xD;
        &lt;HasAttribute Name="NUnit.Framework.TestFixtureAttribute" Inherited="True" /&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/TypePattern.Match&gt;&#xD;
    &lt;Entry DisplayName="Setup/Teardown Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureSetUpAttribute" Inherited="True" /&gt;&#xD;
            &lt;HasAttribute Name="NUnit.Framework.FixtureTearDownAttribute" Inherited="True" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members" /&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Test Methods"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Method" /&gt;&#xD;
          &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
  &lt;TypePattern DisplayName="Default Pattern"&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Public Delegates"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
          &lt;Kind Is="Delegate" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Public Enums"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Access Is="Public" /&gt;&#xD;
          &lt;Kind Is="Enum" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Static Fields and Constants"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Constant" /&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="Field" /&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Kind Order="Constant Field" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Fields"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Field" /&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Static /&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Constructors"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Constructor" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Static /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry Priority="100" DisplayName="Interface Implementations"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="Member" /&gt;&#xD;
          &lt;ImplementsInterface /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;ImplementsInterface Immediate="True" /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="All other members"&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Properties, Indexers"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="Property" /&gt;&#xD;
          &lt;Kind Is="Indexer" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
      &lt;Entry.SortBy&gt;&#xD;
        &lt;Access /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Entry.SortBy&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry DisplayName="Nested Types"&gt;&#xD;
      &lt;Entry.Match&gt;&#xD;
        &lt;Kind Is="Type" /&gt;&#xD;
      &lt;/Entry.Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/TypePattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/CustomPattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-8" ?&gt;&#xD;
&lt;!-- &#xD;
I. Overall&#xD;
&#xD;
I.1 Each pattern can have &lt;Match&gt;....&lt;/Match&gt; element. For the given type declaration, the pattern with the match, evaluated to 'true' with the largest weight, will be used&#xD;
I.2 Each pattern consists of the sequence of &lt;Entry&gt;...&lt;/Entry&gt; elements. Type member declarations are distributed between entries&#xD;
I.3 If pattern has RemoveAllRegions="true" attribute, then all regions will be cleared prior to reordering. Otherwise, only auto-generated regions will be cleared&#xD;
I.4 The contents of each entry is sorted by given keys (First key is primary,  next key is secondary, etc). Then the declarations are grouped and en-regioned by given property&#xD;
&#xD;
II. Available match operands&#xD;
&#xD;
Each operand may have Weight="..." attribute. This weight will be added to the match weight if the operand is evaluated to 'true'.&#xD;
The default weight is 1&#xD;
&#xD;
II.1 Boolean functions:&#xD;
II.1.1 &lt;And&gt;....&lt;/And&gt;&#xD;
II.1.2 &lt;Or&gt;....&lt;/Or&gt;&#xD;
II.1.3 &lt;Not&gt;....&lt;/Not&gt;&#xD;
&#xD;
II.2 Operands&#xD;
II.2.1 &lt;Kind Is="..."/&gt;. Kinds are: class, struct, interface, enum, delegate, type, constructor, destructor, property, indexer, method, operator, field, constant, event, member&#xD;
II.2.2 &lt;Name Is="..."&#xD;
      IgnoreCase="true/false"] /&gt;. The 'Is' attribute contains regular expression&#xD;
II.2.3 &lt;HasAttribute CLRName="..."&#xD;
              Inherit="true/false"] /&gt;. The 'CLRName' attribute contains regular expression&#xD;
II.2.4 &lt;Access Is="..."/&gt;. The 'Is' values are: public, protected, internal, protected internal, private&#xD;
II.2.5 &lt;Static/&gt;&#xD;
II.2.6 &lt;Abstract/&gt;&#xD;
II.2.7 &lt;Virtual/&gt;&#xD;
II.2.8 &lt;Override/&gt;&#xD;
II.2.9 &lt;Sealed/&gt;&#xD;
II.2.10 &lt;Readonly/&gt;&#xD;
II.2.11 &lt;ImplementsInterface CLRName="..."/&gt;. The 'CLRName' attribute contains regular expression&#xD;
II.2.12 &lt;HandlesEvent /&gt;&#xD;
&#xD;
--&gt;&#xD;
&lt;Patterns xmlns="urn:shemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
&#xD;
&#xD;
  &lt;!-- Do not reorder COM interfaces  --&gt;&#xD;
  &lt;Pattern&gt;&#xD;
    &lt;Match&gt;&#xD;
      &lt;And Weight="100"&gt;&#xD;
        &lt;Kind Is="interface" /&gt;&#xD;
        &lt;HasAttribute CLRName="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/Match&gt;&#xD;
  &lt;/Pattern&gt;&#xD;
&#xD;
&#xD;
  &lt;!-- Special formatting of NUnit test fixture  --&gt;&#xD;
  &lt;Pattern RemoveAllRegions="true"&gt;&#xD;
    &lt;Match&gt;&#xD;
      &lt;And Weight="100"&gt;&#xD;
        &lt;Kind Is="class" /&gt;&#xD;
        &lt;HasAttribute CLRName="NUnit.Framework.TestFixtureAttribute"&#xD;
                      Inherit="true" /&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/Match&gt;&#xD;
    &lt;!-- Setup/Teardow --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="method" /&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.SetUpAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.TearDownAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.FixtureSetUpAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.FixtureTearDownAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- All other members --&gt;&#xD;
    &lt;Entry /&gt;&#xD;
    &lt;!-- Test methods --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="100"&gt;&#xD;
          &lt;Kind Is="method" /&gt;&#xD;
          &lt;HasAttribute CLRName="NUnit.Framework.TestAttribute"&#xD;
                        Inherit="false" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Access Order="public protected-internal protected internal private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/Pattern&gt;&#xD;
&#xD;
&#xD;
  &lt;!-- Special formatting of MSTest test fixture  --&gt;&#xD;
  &lt;Pattern RemoveAllRegions="true"&gt;&#xD;
    &lt;Match&gt;&#xD;
      &lt;And Weight="100"&gt;&#xD;
        &lt;Kind Is="class" /&gt;&#xD;
        &lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute"&#xD;
                      Inherit="true" /&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/Match&gt;&#xD;
    &lt;!-- public delegate --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="100"&gt;&#xD;
          &lt;Access Is="public" /&gt;&#xD;
          &lt;Kind Is="delegate" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- public enum --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="100"&gt;&#xD;
          &lt;Access Is="public" /&gt;&#xD;
          &lt;Kind Is="enum" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- constants --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="constant" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Kind Order="constant" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- fields --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="field" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Kind Order="field" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Readonly /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!--  Events --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="event" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- Constructors. Place static one first --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="constructor" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Static /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- Setup/Teardow --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="100"&gt;&#xD;
          &lt;Kind Is="method"/&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
            &lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyInitializeAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
            &lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
            &lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
            &lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
            &lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute"&#xD;
                          Inherit="true" /&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Access Order="public protected-internal protected internal" /&gt;&#xD;
        &lt;Static Ascending="true" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
      &lt;Group Region="Setup/Teardown" /&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- Test methods --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="90"&gt;&#xD;
          &lt;Kind Is="method" /&gt;&#xD;
          &lt;HasAttribute CLRName="Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute"&#xD;
                        Inherit="true" /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!--  Static Methods --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="70"&gt;&#xD;
          &lt;Kind Is="method" /&gt;&#xD;
          &lt;Static /&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Access Order="public protected-internal protected internal private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
      &lt;Group Region="Static Helper Methods" /&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!--  Methods --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Weight="60"&#xD;
              Is="method" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Access Order="public protected-internal protected internal private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
      &lt;Group Region="Helper Methods" /&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- properties, indexers --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="property" /&gt;&#xD;
          &lt;Kind Is="indexer" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Access Order="public protected-internal protected internal private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- All other members --&gt;&#xD;
    &lt;Entry&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- nested types --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="type" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Access Order="public protected-internal protected internal private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/Pattern&gt;&#xD;
&#xD;
&#xD;
  &lt;!-- Default pattern  --&gt;&#xD;
  &lt;Pattern RemoveAllRegions="true"&gt;&#xD;
&#xD;
    &lt;!-- fields and constants --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="constant" /&gt;&#xD;
          &lt;Kind Is="field" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
        &lt;Kind Order="constant field"/&gt;&#xD;
        &lt;Readonly/&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!-- delegates --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="delegate" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
        &lt;Name /&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--  Events --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="event" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Static/&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!-- Constructors --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="constructor" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Static/&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!-- Finalizers --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="destructor" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Static/&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private"/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--  Methods --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="method" /&gt;&#xD;
          &lt;Kind Is="operator" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Kind Order="method operator"/&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!-- Properties --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="property" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!-- Indexers --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="indexer"&#xD;
              Weight="90"  /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--Nested structs --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="struct"&#xD;
              Weight="100" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--Nested classes --&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="class"&#xD;
              Weight="100" /&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Static /&gt;&#xD;
        &lt;Access Order="public internal protected-internal protected private" /&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!-- Anything else --&gt;&#xD;
    &lt;Entry /&gt;&#xD;
&#xD;
  &lt;/Pattern&gt;&#xD;
&lt;/Patterns&gt;</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/AddImportsToDeepestScope/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CSharpUsing/QualifiedUsingAtNestedScope/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=LocalConstants/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticReadonly/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="_" Suffix="" Style="aaBb" /&gt;</s:String>
	<s:String x:Key="/Default/Environment/Editor/MatchingBraceHighlighting/Position/@EntryValue">BOTH_SIDES</s:String>
	<s:String x:Key="/Default/Environment/Editor/MatchingBraceHighlighting/Style/@EntryValue">OUTLINE</s:String>
	<s:String x:Key="/Default/Environment/ExternalSources/NavigationMode/@EntryValue">Disabled</s:String>
	<s:String x:Key="/Default/Environment/Hierarchy/PsiConfiguration/LocationType/@EntryValue">TEMP_FOLDER</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpFileLayoutPatternsUpgrade/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAddAccessorOwnerDeclarationBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAlwaysTreatStructAsNotReorderableMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateThisQualifierSettings/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/TextControl/HighlightCurrentLine/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/Environment/UnitTesting/JavaScriptUnitTestProviders/JasmineJsVersion/@EntryValue">2.0</s:String>
	<s:Boolean x:Key="/Default/Environment/UnitTesting/MsTestProvider/UseLegacyRunner/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/FilterSettingsManager/AttributeFilterXml/@EntryValue">&lt;data /&gt;</s:String>
	<s:String x:Key="/Default/FilterSettingsManager/CoverageFilterXml/@EntryValue">&lt;data&gt;&lt;IncludeFilters /&gt;&lt;ExcludeFilters /&gt;&lt;/data&gt;</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/Comment/@EntryValue">Guid code contract</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/CustomPatternPlaceholder/=paramName/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/CustomPatternPlaceholder/=paramName/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/CustomPatternPlaceholder/=paramName/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/CustomPatternPlaceholder/=paramName/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/ReplaceComment/@EntryValue">Convert to CodeGuard</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/ReplacePattern/@EntryValue">Guard.That(() =&gt; $paramName$).IsNotEmpty();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/SearchPattern/@EntryValue">Contract.Requires&lt;ArgumentException&gt;($paramName$.Equals(Guid.Empty) == false);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C5915DB262CE946A9F2805DF69DC121/Severity/@EntryValue">SUGGESTION</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/Comment/@EntryValue">String code contract</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/CustomPatternPlaceholder/=paramName/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/CustomPatternPlaceholder/=paramName/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/CustomPatternPlaceholder/=paramName/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/CustomPatternPlaceholder/=paramName/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/ReplaceComment/@EntryValue">Convert to CodeGuard</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/ReplacePattern/@EntryValue">Guard.That(() =&gt; $paramName$).IsNotNullOrEmpty();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/SearchPattern/@EntryValue">Contract.Requires&lt;ArgumentNullException&gt;(String.IsNullOrWhiteSpace($paramName$) == false);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=1C726B074E22CF4882382EE2A45C9D8F/Severity/@EntryValue">SUGGESTION</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/Comment/@EntryValue">Int greater than code contract</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/CustomPatternPlaceholder/=paramName/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/CustomPatternPlaceholder/=paramName/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/CustomPatternPlaceholder/=paramName/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/CustomPatternPlaceholder/=paramName/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/CustomPatternPlaceholder/=value/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/CustomPatternPlaceholder/=value/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/CustomPatternPlaceholder/=value/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/CustomPatternPlaceholder/=value/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/ReplaceComment/@EntryValue">Convert to CodeGuard</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/ReplacePattern/@EntryValue">Guard.That(() =&gt; $paramName$).IsGreaterThan($value$);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/SearchPattern/@EntryValue">Contract.Requires&lt;ArgumentOutOfRangeException&gt;($paramName$ &gt; $value$);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=47111BA277B80B46916BC64D52B542DE/Severity/@EntryValue">SUGGESTION</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=686133C4ABE45A4682379F2C7235CCDF/Comment/@EntryValue">Review inconclusive test</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=686133C4ABE45A4682379F2C7235CCDF/Severity/@EntryValue">WARNING</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=6B7E8D5506DE554C8991B0A1002EF691/Comment/@EntryValue">Null code contract</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=6B7E8D5506DE554C8991B0A1002EF691/ReplaceComment/@EntryValue">Convert to CodeGuard</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=6B7E8D5506DE554C8991B0A1002EF691/ReplacePattern/@EntryValue">Guard.That(() =&gt; $paramName$).IsNotNull();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=6B7E8D5506DE554C8991B0A1002EF691/Severity/@EntryValue">SUGGESTION</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/Comment/@EntryValue">Null code contract</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/CustomPatternPlaceholder/=paramName/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/CustomPatternPlaceholder/=paramName/Properties/=ExactType/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/CustomPatternPlaceholder/=paramName/Properties/=ExpressionType/@EntryIndexedValue"></s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/CustomPatternPlaceholder/=paramName/Type/@EntryValue">ExpressionPlaceholder</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/IsReplacePattern/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/LanguageName/@EntryValue">CSHARP</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/ReplaceComment/@EntryValue">Convert to CodeGuard</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/ReplacePattern/@EntryValue">Guard.That(() =&gt; $paramName$).IsNotNull();</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/SearchPattern/@EntryValue">Contract.Requires&lt;ArgumentNullException&gt;($paramName$ != null);</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/StructuralSearch/Pattern/=79A516157C45E1418CC5EC289F90C8ED/Severity/@EntryValue">SUGGESTION</s:String></wpf:ResourceDictionary>